# Configurações de conexão com o banco de dados
$ServerName = "localhost\DEV2019"
$DatabaseName = "AdventureWorks2008R2"
$Username = "marcus"

# Solicitar senha em um prompt e armazená-la em uma variável segura
$SecurePassword = Read-Host "Digite a senha" -AsSecureString
$Password = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto([System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($SecurePassword))

#$Password = "senha123"

# Caminho onde os arquivos CSV serão salvos
$OutputDirectory = "C:\temp\word-csv\"

# Lista de consultas a serem executadas e os nomes dos arquivos CSV resultantes
$Queries = @(
    @{ Query = "SET NOCOUNT ON; select top 5 * from [HumanResources].[EmployeePayHistory]"; FileName = "EmployeePayHistory.csv" },
    @{ Query = "SET NOCOUNT ON; select top 5 * from [Person].[BusinessEntity]"; FileName = "BusinessEntity.csv" },
    @{ Query = "SET NOCOUNT ON; select top 5 * from [Person].[StateProvince]"; FileName = "StateProvince.csv" },
    @{ Query = "SET NOCOUNT ON; select top 5 * from [Production].[BillOfMaterials]"; FileName = "BillOfMaterials.csv" }
)

# Função para executar uma consulta e salvar o resultado em um arquivo CSV
function ExecuteQueryAndSaveToCSV {
    param (
        [string]$Query,
        [string]$FileName
    )

    # Criar conexão com o banco de dados SQL Server
    $ConnectionString = "Server=$ServerName;Database=$DatabaseName;User ID=$Username;Password=$Password;"
    $Connection = New-Object System.Data.SqlClient.SqlConnection($ConnectionString)
    
    try {
        # Abrir a conexão
        $Connection.Open()

        # Criar um comando SQL
        $Command = $Connection.CreateCommand()
        $Command.CommandText = $Query

        # Executar o comando e armazenar o resultado em um DataTable
        $DataTable = New-Object System.Data.DataTable
        $DataAdapter = New-Object System.Data.SqlClient.SqlDataAdapter($Command)
        $DataAdapter.Fill($DataTable)

        # Salvar o DataTable como um arquivo CSV
        $DataTable | Export-Csv -Path "$OutputDirectory\$FileName" -Delimiter ";" -NoTypeInformation
    }
    catch {
        Write-Host "Ocorreu um erro ao executar a consulta: $_.Exception.Message"
    }
    finally {
        # Fechar a conexão
        $Connection.Close()
    }
}

# Iterar sobre cada consulta e executá-la
foreach ($QueryInfo in $Queries) {
    ExecuteQueryAndSaveToCSV -Query $QueryInfo.Query -FileName $QueryInfo.FileName
}
