DECLARE @RoleName NVARCHAR(255) = N'minha-role'; -- Substitua pelo nome da sua role
DECLARE @SQLCommands NVARCHAR(MAX) = N'';

-- Gerar comandos REVOKE com base nas permissões da role
SELECT @SQLCommands = @SQLCommands + 
    'REVOKE ' + permission_name + 
    ' ON ' + QUOTENAME(schema_name) + '.' + QUOTENAME(o.name) + 
    ' FROM ' + QUOTENAME(@RoleName) + ';' + CHAR(13) + CHAR(10)
FROM sys.database_permissions AS p
INNER JOIN sys.objects AS o ON p.major_id = o.object_id
WHERE grantee_principal_id = DATABASE_PRINCIPAL_ID(@RoleName);

-- Exibir os comandos gerados
PRINT @SQLCommands;


REVOKE ALL PRIVILEGES ON ALL TABLES IN SCHEMA public FROM my-user;
REVOKE ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public FROM my-user;
REVOKE ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public FROM my-user;
-- Continue revogando para outros objetos e esquemas, se aplicável


-----------
SELECT 
    n.nspname AS schema_name,
    c.relname AS object_name,
    CASE 
        WHEN c.relkind = 'r' THEN 'table'
        WHEN c.relkind = 'S' THEN 'sequence'
        WHEN c.relkind = 'v' THEN 'view'
        ELSE c.relkind
    END AS object_type
FROM 
    pg_class c
INNER JOIN 
    pg_namespace n ON n.oid = c.relnamespace
WHERE 
    relowner = (SELECT usesysid FROM pg_user WHERE usename = 'seu_usuario');


--
--alterar schema padrão
ALTER USER seu_usuario SET search_path = outro_schema;

--verifica se possui papéis
SELECT rolname FROM pg_user WHERE usename = 'seu_usuario';

--lista permissões globais
SELECT 
    relname AS object_name, 
    substring(split_part(privilege_type, ' ', 2) FROM 2) AS privilege
FROM 
    information_schema.role_table_grants
WHERE 
    grantee = 'seu_usuario';


---
SELECT routine_name, routine_schema
FROM information_schema.routines
WHERE routine_type = 'FUNCTION' AND specific_schema NOT IN ('pg_catalog', 'information_schema')
AND specific_owner = 'seu_usuario';



SELECT schema_name
FROM information_schema.schemata
WHERE schema_owner = 'seu_usuario';


SELECT jobname, owner
FROM pgagent.pga_job
WHERE owner = 'seu_usuario';


SELECT 
    schemaname,
    object_name,
    object_type
FROM pg_tables
WHERE tableowner = 'seu_usuario';


SELECT r.rolname AS role_name
FROM pg_auth_members m
JOIN pg_roles r ON m.roleid = r.oid
WHERE m.member = (SELECT oid FROM pg_roles WHERE rolname = 'seu_usuario');


SELECT extname, extnamespace::regnamespace, objname, objtype
FROM pg_extension
LEFT JOIN pg_depend ON objid = extname::regclass
WHERE extowner = (SELECT oid FROM pg_roles WHERE rolname = 'seu_usuario');


SELECT 
    table_schema,
    table_name,
    string_agg(privilege_type, ', ') AS privileges
FROM information_schema.role_table_grants
WHERE grantee IN (
    SELECT usename FROM pg_user WHERE rolname = 'seu_usuario'
)
GROUP BY table_schema, table_name;


REVOKE USAGE ON SCHEMA dbo FROM marcus;
REVOKE SELECT ON ALL TABLES IN SCHEMA dbo FROM marcus;
REVOKE SELECT ON ALL SEQUENCES IN SCHEMA dbo FROM marcus;


SELECT objtype, objname
FROM pg_shdepend
WHERE refobjid = (SELECT oid FROM pg_roles WHERE rolname = 'marcus');


ALTER DEFAULT PRIVILEGES FOR ROLE marcus REVOKE ALL ON FUNCTIONS FROM PUBLIC;


SELECT DISTINCT relname, conname, nspname
FROM pg_depend
JOIN pg_class ON refobjid = pg_class.oid
LEFT JOIN pg_constraint ON conoid = pg_constraint.oid
JOIN pg_namespace ON connamespace = pg_namespace.oid
WHERE refobjid = (SELECT oid FROM pg_roles WHERE rolname = 'marcus');



