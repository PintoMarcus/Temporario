DECLARE @RoleName NVARCHAR(255) = N'minha-role'; -- Substitua pelo nome da sua role
DECLARE @SQLCommands NVARCHAR(MAX) = N'';

-- Gerar comandos REVOKE com base nas permissões da role
SELECT @SQLCommands = @SQLCommands + 
    'REVOKE ' + permission_name + 
    ' ON ' + QUOTENAME(schema_name) + '.' + QUOTENAME(o.name) + 
    ' FROM ' + QUOTENAME(@RoleName) + ';' + CHAR(13) + CHAR(10)
FROM sys.database_permissions AS p
INNER JOIN sys.objects AS o ON p.major_id = o.object_id
WHERE grantee_principal_id = DATABASE_PRINCIPAL_ID(@RoleName);

-- Exibir os comandos gerados
PRINT @SQLCommands;


REVOKE ALL PRIVILEGES ON ALL TABLES IN SCHEMA public FROM my-user;
REVOKE ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public FROM my-user;
REVOKE ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public FROM my-user;
-- Continue revogando para outros objetos e esquemas, se aplicável


-----------
SELECT 
    n.nspname AS schema_name,
    c.relname AS object_name,
    CASE 
        WHEN c.relkind = 'r' THEN 'table'
        WHEN c.relkind = 'S' THEN 'sequence'
        WHEN c.relkind = 'v' THEN 'view'
        ELSE c.relkind
    END AS object_type
FROM 
    pg_class c
INNER JOIN 
    pg_namespace n ON n.oid = c.relnamespace
WHERE 
    relowner = (SELECT usesysid FROM pg_user WHERE usename = 'seu_usuario');


--
--alterar schema padrão
ALTER USER seu_usuario SET search_path = outro_schema;

--verifica se possui papéis
SELECT rolname FROM pg_user WHERE usename = 'seu_usuario';

--lista permissões globais
SELECT 
    relname AS object_name, 
    substring(split_part(privilege_type, ' ', 2) FROM 2) AS privilege
FROM 
    information_schema.role_table_grants
WHERE 
    grantee = 'seu_usuario';



